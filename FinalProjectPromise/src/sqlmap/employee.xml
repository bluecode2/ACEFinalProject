<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="employee">
	<select id="getMaxEmployeeId" resultClass="java.lang.Integer">
		SELECT
		MAX(EMPLOYEE_ID)+1 FROM EMPLOYEE
	</select>

	<select id="getAllEmployee" resultClass="employee.EmployeeBean"
		parameterClass="java.util.Map">
		SELECT * FROM(
		SELECT emp.*, ROWNUM rnum from (
		SELECT
		EMPLOYEE_ID 						AS employeeId,
		DEPT_ID 							AS deptId,
		RANK_ID 							AS rankId,
		SUPERVISOR_ID 						AS supervisorID,
		PROJECT_ID 							AS projectId,
		CREATED_BY 							AS createBy,
		UPDATED_BY 							AS updatedBy,
		EMPLOYEE_NAME 						AS employeeName,
		GENDER 								AS gender,
		EMAIL 								AS email,
		ADDRESS 							AS address,
		PHONE_NUMBER 						AS phoneNumber,
		TO_CHAR(CREATE_DATE,'yyyy-mm-dd') 	AS createDateInString,
		TO_CHAR(UPDATE_DATE,'yyyy-mm-dd') 	AS updateDateInString
		FROM EMPLOYEE
		where 1=1
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeId">
				LOWER(employee_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptId">
				LOWER(dept_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankId">
				LOWER(rank_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="supervisorId">
				LOWER(SUPERVISOR_ID) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>				
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="projectId">
				LOWER(PROJECT_ID) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>						
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>								
		ORDER BY EMPLOYEE_ID ASC ) emp where ROWNUM &lt; = #end#)
		WHERE rnum
		&gt;
		#begin#
	</select>
	
	<select id="getEmployeeByEmpId" parameterClass="java.lang.Integer" resultClass="employee.EmployeeBean">
	SELECT
		EMPLOYEE_ID 						AS employeeId,
		DEPT_ID 							AS deptId,
		RANK_ID 							AS rankId,
		SUPERVISOR_ID 						AS supervisorID,
		PROJECT_ID 							AS projectId,
		CREATED_BY 							AS createBy,
		UPDATED_BY 							AS updatedBy,
		EMPLOYEE_NAME 						AS employeeName,
		GENDER 								AS gender,
		EMAIL 								AS email,
		ADDRESS 							AS address,
		PHONE_NUMBER 						AS phoneNumber,
		TO_CHAR(CREATE_DATE,'yyyy-mm-dd') 	AS createDateInString,
		TO_CHAR(UPDATE_DATE,'yyyy-mm-dd') 	AS updateDateInString
		FROM EMPLOYEE where employee_id = #empId#
	</select>
	
	<select id="getNewEmpId" resultClass="java.lang.Integer">
	select max(employee_id)+1 from employee 
	</select>

	<insert id="insertEmployee" parameterClass="employee.EmployeeBean">
		INSERT INTO EMPLOYEE
		(EMPLOYEE_ID, DEPT_ID, RANK_ID, SUPERVISOR_ID, PROJECT_ID, CREATED_BY,
		UPDATED_BY, EMPLOYEE_NAME,
		GENDER, EMAIL, ADDRESS,
		PHONE_NUMBER,CREATE_DATE,UPDATE_DATE)
		VALUES
		(#employeeId#,#deptId#,#rankId#,#supervisorID#,#projectId#,#createBy#,#updatedBy#,#employeeName#,
		#gender#,#email#,#address#,#phoneNumber#,TO_DATE(#createDateInString#,'yyyy-mm-dd'),TO_DATE(#updateDateInString#,'yyyy-mm-dd'))
	</insert>

	<update id="updateEmployee" parameterClass="employee.EmployeeBean">
		UPDATE EMPLOYEE SET
		DEPT_ID = #deptId#,
		RANK_ID = #rankId#,
		SUPERVISOR_ID = #supervisorID#,
		PROJECT_ID = #projectId#,
		CREATED_BY = #createBy#,
		UPDATED_BY =
		#updatedBy#,
		EMPLOYEE_NAME = #employeeName#,
		GENDER = #gender#,
		EMAIL =
		#email#,
		ADDRESS = #address#,
		PHONE_NUMBER = #phoneNumber#,
		CREATE_DATE =
		TO_DATE(#createDateInString#,'yyyy-mm-dd'),
		UPDATE_DATE =
		TO_DATE(#updateDateInString#,'yyyy-mm-dd')
		WHERE EMPLOYEE_ID =
		#employeeId#
	</update>

	<delete id="deleteEmployee" parameterClass="java.lang.Integer">
		DELETE FROM EMPLOYEE
		WHERE EMPLOYEE_ID = #EmployeeId#
	</delete>

	<select id="countEmployee" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		SELECT COUNT(1) FROM EMPLOYEE
		where 1=1
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeId">
				LOWER(employee_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptId">
				LOWER(dept_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankId">
				LOWER(rank_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="supervisorId">
				LOWER(SUPERVISOR_ID) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>				
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="projectId">
				LOWER(PROJECT_ID) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>						
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>								

	</select>
</sqlMap>