<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="employee">
	<select id="getMaxEmployeeId" resultClass="employee.EmployeeBean">
		SELECT
		MAX(EMPLOYEE_ID)+1 FROM EMPLOYEE
	</select>

	<select id="getAllEmployee" resultClass="employee.EmployeeBean"
		parameterClass="java.util.Map">
		SELECT * FROM(
		SELECT emp.*, ROWNUM rnum from (
		SELECT
		EMPLOYEE_ID 						AS employeeId,
		EMPLOYEE_code 						AS employeeCode,
		DEPT_ID 							AS deptId,
		DEPT_CODE 							AS deptCode,
		DEPT_NAME							AS deptName,
		RANK_ID 							AS rankId,
		RANK_CODE 							AS rankCode,
		RANK_NAME 							AS rankName,
		RANK_LEVEL 							AS rankLevel,
		SUPERVISOR_ID 						AS supervisorID,
		SUPERVISOR_CODE 					AS supervisorCode,
		SUPERVISOR_NAME 					AS supervisorName,
		CREATED_BY 							AS createdBy,
		UPDATED_BY 							AS updatedBy,
		EMPLOYEE_NAME 						AS employeeName,
		GENDER 								AS gender,
		EMAIL 								AS email,
		ADDRESS 							AS address,
		PHONE_NUMBER 						AS phoneNumber,
		is_active							AS isActive,
		TO_CHAR(CREATE_DATE,'YYYY-MM-DD') 	AS createDateInString,
		TO_CHAR(UPDATE_DATE,'YYYY-MM-DD') 	AS updateDateInString
		FROM vEMPLOYEE
		where is_Active = 1
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeCode">
				LOWER(EMPLOYEE_code) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptId">
				LOWER(dept_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankId">
				LOWER(rank_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="supervisorId">
				LOWER(SUPERVISOR_ID) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>									
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>								
		ORDER BY EMPLOYEE_ID ASC ) emp where ROWNUM &lt; = #end#)
		WHERE rnum
		&gt;
		#begin#
	</select>
	<select id="getAllEmployeeForPopUp" resultClass="employee.EmployeeBean">
	SELECT * FROM(
		SELECT emp.*, ROWNUM rnum from (
		SELECT
		EMPLOYEE_ID 						AS employeeId,
		EMPLOYEE_code 						AS employeeCode,
		DEPT_ID 							AS deptId,
		DEPT_CODE 							AS deptCode,
		DEPT_NAME							AS deptName,
		RANK_ID 							AS rankId,
		RANK_CODE 							AS rankCode,
		RANK_NAME 							AS rankName,
		RANK_LEVEL 							AS rankLevel,
		SUPERVISOR_ID 						AS supervisorID,
		SUPERVISOR_CODE 					AS supervisorCode,
		SUPERVISOR_NAME 					AS supervisorName,
		CREATED_BY 							AS createdBy,
		UPDATED_BY 							AS updatedBy,
		EMPLOYEE_NAME 						AS employeeName,
		GENDER 								AS gender,
		EMAIL 								AS email,
		ADDRESS 							AS address,
		PHONE_NUMBER 						AS phoneNumber,
		is_active							AS isActive,
		TO_CHAR(CREATE_DATE,'YYYY-MM-DD') 	AS createDateInString,
		TO_CHAR(UPDATE_DATE,'YYYY-MM-DD') 	AS updateDateInString
		FROM vEMPLOYEE
		where is_Active = 1
		ORDER BY EMPLOYEE_ID ASC ) emp where ROWNUM &lt; = 10)
		WHERE rnum
		&gt; 1
	</select>
	
	<select id="getEmployeeByEmpId" parameterClass="java.lang.Integer" resultClass="employee.EmployeeBean">
	SELECT
		EMPLOYEE_ID 						AS employeeId,
		EMPLOYEE_code 						AS employeeCode,
		DEPT_ID 							AS deptId,
		DEPT_CODE 							AS deptCode,
		DEPT_NAME							AS deptName,
		RANK_ID 							AS rankId,
		RANK_CODE 							AS rankCode,
		RANK_NAME 							AS rankName,
		RANK_LEVEL							AS rankLevel,
		SUPERVISOR_ID 						AS supervisorId,
		SUPERVISOR_CODE 					AS supervisorCode,
		SUPERVISOR_NAME 					AS supervisorName,
		CREATED_BY 							AS createdBy,
		UPDATED_BY 							AS updatedBy,
		EMPLOYEE_NAME 						AS employeeName,
		GENDER 								AS gender,
		EMAIL 								AS email,
		ADDRESS 							AS address,
		PHONE_NUMBER 						AS phoneNumber,
		is_active							AS isActive,
		TO_CHAR(CREATE_DATE,'YYYY-MM-DD') 	AS createDateInString,
		TO_CHAR(UPDATE_DATE,'YYYY-MM-DD') 	AS updateDateInString
		FROM vEMPLOYEE 
		where employee_id = #value# and IS_ACTIVE = 1
	</select>
	
	<select id="getEmployeeForDeptHead" parameterClass="java.util.Map" resultClass="employee.EmployeeBean">
	SELECT
		EMPLOYEE_ID 						AS employeeId,
		EMPLOYEE_code 						AS employeeCode,
		DEPT_ID 							AS deptId,
		DEPT_NAME							AS deptName,
		e.RANK_ID 							AS rankId,
		EMPLOYEE_NAME 						AS employeeName,
		EMAIL 								AS email
		FROM vEMPLOYEE e
		WHERE dept_id = #deptId# and IS_ACTIVE = 1 AND e.rank_id = fGetGeneralParameterValue('deptHeadLevel')
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeCode">
				LOWER(EMPLOYEE_code) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
	</select>
	
	<select id="getEmployeeForSupervisor" parameterClass="java.util.Map" resultClass="employee.EmployeeBean">
	SELECT
		EMPLOYEE_ID 						AS employeeId,
		EMPLOYEE_code 						AS employeeCode,
		DEPT_ID 							AS deptId,
		e.RANK_ID 							AS rankId,
		EMPLOYEE_NAME 						AS employeeName,
		EMAIL 								AS email
		FROM vEMPLOYEE e
		WHERE dept_id = #deptId# AND RANK_LEVEL = (#rankLevel# -1) and IS_ACTIVE = 1
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeCode">
				LOWER(EMPLOYEE_CODE) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>				
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		ORDER BY EMPLOYEE_ID
	</select>
	
	<select id="getEmployeeForPersonalHoliday" parameterClass="java.util.Map" resultClass="employee.EmployeeBean">
		SELECT
		EMPLOYEE_ID 						AS employeeId,
		EMPLOYEE_code 						AS employeeCode,
		DEPT_ID 							AS deptId,
		e.RANK_ID 							AS rankId,
		EMPLOYEE_NAME 						AS employeeName,
		EMAIL 								AS email
		FROM vEMPLOYEE e
		WHERE IS_ACTIVE = 1
	</select>
	
	<select id="getNewEmpId" resultClass="java.lang.Integer">
		select max(employee_id)+1 from employee 
	</select>

	<insert id="insertEmployee" parameterClass="employee.EmployeeBean">
		INSERT INTO EMPLOYEE
		(EMPLOYEE_ID, DEPT_ID, RANK_ID, SUPERVISOR_ID, CREATED_BY,EMPLOYEE_NAME,
		GENDER, EMAIL, ADDRESS,
		PHONE_NUMBER,CREATE_DATE,IS_ACTIVE,EMPLOYEE_CODE)
		VALUES
		(#employeeId#,#deptId#,#rankId#, #supervisorId# ,#createdBy#,#employeeName#,
		#gender#,#email#,#address#,#phoneNumber#,SYSDATE,1,#employeeCode#)
	</insert>

	<update id="updateEmployee" parameterClass="employee.EmployeeBean">
		UPDATE EMPLOYEE SET
		DEPT_ID = #deptId#,
		RANK_ID = #rankId#,
		SUPERVISOR_ID = #supervisorId#,
		UPDATED_BY = #updatedBy#,
		EMPLOYEE_NAME = #employeeName#,
		GENDER = #gender#,
		EMAIL = #email#,
		ADDRESS = #address#,
		PHONE_NUMBER = #phoneNumber#,
		UPDATE_DATE = SYSDATE,
		EMPLOYEE_CODE = #employeeCode#
		WHERE EMPLOYEE_ID = #employeeId#
	</update>

	<delete id="deleteEmployee" parameterClass="java.util.Map">
		update
		employee set
		IS_ACTIVE = 0,
		UPDATED_BY = #updatedBy#,
		UPDATE_DATE = SYSDATE
		where EMPLOYEE_ID = #employeeId#
	</delete>

	<select id="countEmployee" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		SELECT COUNT(1) FROM EMPLOYEE
		where is_active = 1
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeId">
				LOWER(employee_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptId">
				LOWER(dept_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankId">
				LOWER(rank_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="supervisorId">
				LOWER(SUPERVISOR_ID) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>				
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="projectId">
				LOWER(PROJECT_ID) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>						
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>								
	</select>
	<select id="getEmployeeForAssignTask" resultClass="employee.EmployeeBean" parameterClass="java.util.Map">
	SELECT
		EMPLOYEE_ID 						AS employeeId,
		EMPLOYEE_code 						AS employeeCode,
		DEPT_ID 							AS deptId,
		DEPT_CODE 							AS deptCode,
		DEPT_NAME							AS deptName,
		RANK_ID 							AS rankId,
		RANK_CODE 							AS rankCode,
		RANK_NAME 							AS rankName,
		SUPERVISOR_ID 						AS supervisorId,
		SUPERVISOR_CODE 					AS supervisorCode,
		SUPERVISOR_NAME 					AS supervisorName,
		EMPLOYEE_NAME 						AS employeeName,
		EMAIL								AS email
		FROM vEMPLOYEE 
		where SUPERVISOR_ID = #spvId# 
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeCode">
				LOWER(EMPLOYEE_CODE) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
	</select>
	
	<select id="getAllEmployeeForPM" resultClass="employee.EmployeeBean"
		parameterClass="java.util.Map">
			select 
			EMPLOYEE_ID 						AS employeeId,
			EMPLOYEE_code 						AS employeeCode,
			DEPT_ID 							AS deptId,
			DEPT_CODE 							AS deptCode,
			DEPT_NAME							AS deptName,
			RANK_ID 							AS rankId,
			RANK_CODE 							AS rankCode,
			RANK_NAME 							AS rankName,
			RANK_LEVEL 							AS rankLevel,
			SUPERVISOR_ID 						AS supervisorID,
			SUPERVISOR_CODE 					AS supervisorCode,
			SUPERVISOR_NAME 					AS supervisorName,
			CREATED_BY 							AS createdBy,
			UPDATED_BY 							AS updatedBy,
			EMPLOYEE_NAME 						AS employeeName,
			GENDER 								AS gender,
			EMAIL 								AS email,
			ADDRESS 							AS address,
			PHONE_NUMBER 						AS phoneNumber,
			is_active							AS isActive,
			TO_CHAR(CREATE_DATE,'yyyy-MM-dd') 	AS createDateInString,
			TO_CHAR(UPDATE_DATE,'yyyy-MM-dd') 	AS updateDateInString
			FROM vEMPLOYEE where employee_id in
        	(select distinct supervisor_id from vemployee)
        	 and dept_id = #deptId#
        	 <dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
			</dynamic>		
			<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeCode">
				LOWER(EMPLOYEE_CODE) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
			</dynamic>		
	</select>

</sqlMap>
