<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="users">
	<insert id="insertNewUser" parameterClass="user.UserBean">
		INSERT INTO users
		( 
			USER_ID, 		USER_ROLE_ID,
			EMPLOYEE_ID,	CREATED_BY,
			USERNAME,		PASSWORD_USER,
			IS_ACTIVE_DIRECTORY,
			IS_ACTIVE,		CREATE_DATE
		)
		VALUES
		( 
			#userId#, 		#userRoleId#,
			#employeeId#,	#createdBy#,
			#username#, 	(dbms_obfuscation_toolkit.md5(input_string=&gt; fGetGeneralParameterValue('password'))),
			#isActiveDirectory#,
			1,				SYSDATE
		)
	</insert>

	<select id="getNewUserId" resultClass="java.lang.Integer">
		select max(user_id)+1 from users
	</select>
	
	<update id="updateUser" parameterClass="user.UserBean">
	update users set 
	updated_by = #updatedBy#,
	update_date = SYSDATE,
	employee_id = #employeeId#,
	user_role_id = #userRoleId#
	where user_id = #userId#
	</update>
	
	<update id="changePassword" parameterClass="user.UserBean">
	update users set 
	updated_by = #updatedBy#,
	update_date = SYSDATE,
	password_user = dbms_obfuscation_toolkit.md5(input_string=&gt; #passwordUser#)
	where user_id = #userId#
	</update>

	<select id="getAllUser" parameterClass="java.util.Map"
		resultClass="user.UserBean">
		SELECT * from (
		    SELECT us.*, ROWNUM rnum from(
		        SELECT
		        USER_ID         AS      userId,
		        USER_ROLE_ID    AS      userRoleId,
		        EMPLOYEE_ID     AS      employeeId,
		        CREATED_BY      AS      createdBy,
		        UPDATED_BY      AS      updatedBy,
		        USERNAME        AS      username,
		        PASSWORD_USER   AS      passwordUser,
		        IS_ACTIVE       AS      isActive,
		        IS_ACTIVE_DIRECTORY       AS      isActiveDirectory,
		        TO_CHAR(CREATE_DATE,'yyyy-MM-dd') AS createDateInString,
		        TO_CHAR(UPDATE_DATE,'yyyy-MM-dd') AS updateDateInString,
		        employee_name   AS      employeeName,
		        user_role_name  AS      userRoleName
		        from vusers
		        where is_active = 1
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="username">
				LOWER(USERNAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
      	 		order by username) us 
	       WHERE ROWNUM &lt; = #end#)
        WHERE rnum &gt; #begin#
	</select>
	
	<select id="checkLogin" resultClass="user.UserBean" parameterClass="java.util.Map">
		SELECT
		USER_ID         AS      userId,
		USER_ROLE_ID    AS      userRoleId,
		EMPLOYEE_ID     AS      employeeId,
		CREATED_BY      AS      createdBy,
		UPDATED_BY      AS      updatedBy,
		USERNAME        AS      username,
		PASSWORD_USER   AS      passwordUser,
		IS_ACTIVE       AS      isActive,
		IS_ACTIVE_DIRECTORY       AS      isActiveDirectory,
		TO_CHAR(CREATE_DATE,'yyyy-MM-dd') AS createDateInString,
		TO_CHAR(UPDATE_DATE,'yyyy-MM-dd') AS updateDateInString,
		employee_name   AS      employeeName,
		user_role_name  AS      userRoleName,
		dept_id			AS		deptId
		from vusers
		where password_user = dbms_obfuscation_toolkit.md5(input_string=&gt; #password#) 
		AND username = #username# 
	</select>
	
	<select id="getUserByUserName" resultClass="user.UserBean" parameterClass="java.util.Map">
		SELECT
		USER_ID         AS      userId,
		USER_ROLE_ID    AS      userRoleId,
		EMPLOYEE_ID     AS      employeeId,
		CREATED_BY      AS      createdBy,
		UPDATED_BY      AS      updatedBy,
		USERNAME        AS      username,
		PASSWORD_USER   AS      passwordUser,
		IS_ACTIVE       AS      isActive,
		IS_ACTIVE_DIRECTORY       AS      isActiveDirectory,
		TO_CHAR(CREATE_DATE,'yyyy-MM-dd') AS createDateInString,
		TO_CHAR(UPDATE_DATE,'yyyy-MM-dd') AS updateDateInString,
		employee_name   AS      employeeName,
		user_role_name  AS      userRoleName,
		dept_id			AS		deptId
		from vusers
		where username = #username# 
	</select>
	
	<select id="countUser" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		SELECT COUNT(1) FROM vusers
		WHERE IS_ACTIVE = 1
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="employeeName">
				LOWER(EMPLOYEE_NAME) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="username">
				LOWER(USERNAME)
				LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
	</select>
	
	<select id="getNewUserID" resultClass="java.lang.Integer">
		SELECT MAX(USER_ID)+1 FROM USERS
	</select>
	<select id="getUserByUserID" parameterClass="java.lang.Integer" resultClass="user.UserBean">
		 SELECT
		        USER_ID         AS      userId,
		        USER_ROLE_ID    AS      userRoleId,
		        EMPLOYEE_ID     AS      employeeId,
		        CREATED_BY      AS      createdBy,
		        UPDATED_BY      AS      updatedBy,
		        USERNAME        AS      username,
		        PASSWORD_USER   AS      passwordUser,
		        IS_ACTIVE       AS      isActive,
		        IS_ACTIVE_DIRECTORY       AS      isActiveDirectory,
		        TO_CHAR(CREATE_DATE,'yyyy-MM-dd') AS createDateInString,
		        TO_CHAR(UPDATE_DATE,'yyyy-MM-dd') AS updateDateInString,
		        employee_name   AS      employeeName,
		        user_role_name  AS      userRoleName,
		        dept_id			AS		deptId
		        from vusers
		        where is_active = 1 AND USER_ID = #tempUserID#
	</select>
	<update id="delUsers" parameterClass="java.util.Map">
		update users set 
		is_active = 0,
		UPDATED_BY = #updatedBy#,
		UPDATE_DATE = SYSDATE
		where user_id = #userId#
	</update>
	<update id="deleteEmployee" parameterClass="java.util.Map">
		update users 
		set is_active = 0,
		UPDATED_BY = #updatedBy#,
		UPDATE_DATE = SYSDATE
		where employee_id = #empId#
	</update>
</sqlMap>
