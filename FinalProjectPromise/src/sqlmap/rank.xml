<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="rank">
	<select id="getAllEmployeeRank" resultClass="rank_employee.RankEmpBean" parameterClass="java.util.Map">
		select 
		rankId,
		updatedBy,
		createdBy,
		rankName,
		rankLevel,
		createDateInString,
		updateDateInString,
		rankCode,
		isDeleted
		from (
			select r. 
			r.rankId as rankId,
			r.updatedBy as updatedBy,
			r.createdBy as createdBy,
			r.rankName as rankName,
			r.rankLevel as rankLevel,
			r.createDateInString 	AS createDateInString,
			r.updateDateInString 	AS updateDateInString,
			r.rankCode as rankCode,
			r.isDeleted as isDeleted,
			ROWNUM rnum from (
				SELECT 
				rank_id as rankId,
				UPDATED_BY as updatedBy,
				CREATED_BY as createdBy,
				rank_name as rankName,
				rank_level as rankLevel,
				TO_CHAR(CREATE_DATE,'YYYY-MM-DD') 	AS createDateInString,
				TO_CHAR(UPDATE_DATE,'YYYY-MM-DD') 	AS updateDateInString,
				rank_code as rankCode,
				IS_DELETED as isDeleted
				FROM rank_emp
				where IS_DELETED=0
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankCode">
				LOWER(rank_code) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankName">
				LOWER(rank_name) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>			
		ORDER BY rank_level asc ) r
		where ROWNUM <![CDATA[<=]]> #end#)
		where rnum <![CDATA[>=]]> #begin#
	</select>

	<select id="getRankByRankId" parameterClass="java.lang.Integer" resultClass="rank_employee.RankEmpBean">
	SELECT rank_id as rankId,
		UPDATED_BY as updatedBy,
		CREATED_BY as createdBy,
		rank_name as rankName,
		rank_level as rankLevel,
		rank_code as rankCode,
		TO_CHAR(CREATE_DATE,'YYYY-MM-DD') 	AS createDateInString,
		TO_CHAR(UPDATE_DATE,'YYYY-MM-DD') 	AS updateDateInString,
		IS_DELETED as isDeleted
		FROM rank_emp
		where rank_id = #tmpRankId#
	</select>
	
	<select id="getNewRankId" resultClass="java.lang.Integer">
	select max(rank_id)+1 FROM rank_emp
	</select>

	<insert id="insertEmployeeRank" parameterClass="rank_employee.RankEmpBean">
		insert into
		rank_emp (rank_id, UPDATED_BY, CREATED_BY, rank_code, rank_name, rank_level,
		create_date, is_deleted)
		values (#rankId#, #updatedBy#, #createdBy#,#rankCode#,#rankName#, #rankLevel#,SYSDATE, 0)
	</insert>

	<update id="updateEmployeeRank" parameterClass="rank_employee.RankEmpBean">
		UPDATE rank_emp
		SET
		UPDATED_BY=#updatedBy#,
		rank_name=#rankName#, 
		UPDATE_DATE=SYSDATE,
		rank_code = #rankCode#,
		rank_level = #rankLevel#
		WHERE rank_id=#rankId#
	</update>

	<update id="deleteEmployeeRank" parameterClass="rank_employee.RankEmpBean">
		update
		RANK_EMP SET
		IS_DELETED = 1,
		UPDATED_BY = #updatedBy#,
		UPDATE_DATE = SYSDATE
		WHERE RANK_ID=#rankId#
		AND IS_DELETED=0
	</update>

	<!-- <delete id="deleteEmployeeRank" parameterClass="java.lang.Integer">
		DELETE
		rank_emp
		WHERE rank_id=#id#
	</delete> -->

	<select id="countEmployeeRank" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		SELECT COUNT(1) FROM RANK_EMP
			where is_deleted=0
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankCode">
				LOWER(rank_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankName">
				LOWER(rank_name) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
	</select>
	<select id="getRankListForSearch" parameterClass="java.util.Map" resultClass="rank_employee.RankEmpBean">
	SELECT rank_id as rankId,
		UPDATED_BY as updatedBy,
		CREATED_BY as createdBy,
		rank_name as rankName,
		rank_level as rankLevel,
		TO_CHAR(CREATE_DATE,'YYYY-MM-DD') 	AS createDateInString,
		TO_CHAR(UPDATE_DATE,'YYYY-MM-DD') 	AS updateDateInString,
		rank_code as rankCode,
		IS_DELETED as isDeleted
		FROM rank_emp
		where IS_DELETED = 0
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankCode">
				LOWER(rank_code) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="rankName">
				LOWER(rank_name) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>	
			ORDER BY rank_level
		
	</select>
</sqlMap>
