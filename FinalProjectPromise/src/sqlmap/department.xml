<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="department">
	<select id="getListDepartments" parameterClass="java.util.Map" 
		resultClass="department.DepartmentBean">
		SELECT * FROM (
		SELECT dept.*, ROWNUM rnum from ( SELECT 
		dept_id 			as deptId ,
		dept_head_id 		as deptHeadId ,
		created_by 			as createdBy ,
		updated_by 			as updatedBy , 
		dept_code 			as deptCode , 
		dept_name 			as deptName , 
		create_date			as createDate , 
		update_date 		as updateDate 
		from department
		WHERE is_deleted = 0
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptId">
				LOWER(dept_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>			
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptHeadId">
				LOWER(dept_head_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptCode">
				LOWER(dept_code) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptName">
				LOWER(dept_name) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		order by dept_id
		) dept where ROWNUM &lt; = #end#) WHERE rnum &gt;
		#begin#
	</select>
	
	<select id="getDepartmentbyDeptId" parameterClass="java.lang.Integer" resultClass="department.DepartmentBean">
		SELECT 
		dept_id 			as deptId ,
		dept_head_id 		as deptHeadId ,
		created_by 			as createdBy ,
		updated_by 			as updatedBy , 
		dept_code 			as deptCode , 
		dept_name 			as deptName , 
		create_date			as createDate , 
		update_date 		as updateDate 
		from department
		WHERE is_deleted = 0 AND dept_id = #tmpDeptId#
	</select>
	
	<select id="getNewDeptId" resultClass="java.lang.Integer">
		SELECT
		MAX(dept_id)+1
		FROM DEPARTMENT
	</select>

	<insert id="insertDepartment" parameterClass="department.DepartmentBean">
		INSERT INTO
		DEPARTMENT
		(dept_id, dept_head_id, created_by, updated_by, dept_code,
		dept_name, create_date, update_date,is_deleted)
		VALUES (#deptId#, #deptHeadId#,
		#createdBy#, NULL, #deptCode#, #deptName#, SYSDATE,
		NULL, 0)
	</insert>

	<update id="updateDepartment" parameterClass="department.DepartmentBean">
		UPDATE DEPARTMENT
		SET
		dept_id = #deptId#,
		dept_head_id = #deptHeadId#,
		updated_by = #updatedBy#,
		dept_code = #deptCode#,
		dept_name
		= #deptName#,
		update_date = SYSDATE
		WHERE dept_id = #deptId#
	</update>

	<delete id="deleteDepartment" parameterClass="java.util.Map">
		UPDATE department
		SET is_deleted = 1,
		updated_by = #updatedBy#,
		update_date = SYSDATE
		WHERE dept_id = #deptId#
	</delete>

	<select id="countDepartment" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		SELECT COUNT(1) FROM DEPARTMENT
		WHERE is_deleted = 0
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptId">
				LOWER(dept_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>			
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptHeadId">
				LOWER(dept_head_id) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptCode">
				LOWER(dept_code) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>		
		<dynamic prepend="AND">
			<isEqual property="searchField" compareValue="deptName">
				LOWER(dept_name) LIKE LOWER( '%' || #searchValue# || '%' )
			</isEqual>
		</dynamic>
	</select>
</sqlMap>